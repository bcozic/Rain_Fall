class N
{
	int		(*f_operator)(N&);
	char	str[400];
	int		value;
}

N::N(int value)
{
	this->f_operator = &(this->operator);
	this->value = value;
}

N::operator+(N& eff)
{
	return (this->value + eff->value);
}

N::operator-(N& eff)
{
	return (this->value + eff->value);
}

N::setAnnotation(char* str)
{
	memcpy(this->str, str, strlen(str));
}

int main(int ac, char **av)
{
	N	*foo;
	N	*bar;
	N	*toto;
	N	*tata;

	if (ac <= 1)
		exit(1);
	foo = new N(5);
	bar = new N(6);
	toto = foo;
	toto = bar;
	toto.setAnnotation(av[1]);
	*(*tata)(tata, toto);
}

